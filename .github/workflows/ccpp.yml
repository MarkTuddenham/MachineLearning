name: C++ CI

on:
  push:
    branches:    
      - master 
      - dev
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Build - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: mkdir _build/
      run: mkdir -p _build/
    - name: setup cmake
      working-directory: _build
      run: cmake -DCMAKE_BUILD_TYPE=Release ..
    - name: build
      run: cmake --build _build/

  
  test:
      name: Test - ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
      steps:
        - uses: actions/checkout@v1
          with:
            submodules: recursive
      - name: mkdir _build/
        run: mkdir -p _build/
      - name: setup cmake
        working-directory: _build
        run: cmake -DCMAKE_BUILD_TYPE=Debug ..
      - name: build
        run: cmake --build _build/
      - name: run tests (Windows)
        if: runner.os == 'Windows'
        run: .\bin\Debug\Tests.exe
      - name: run tests (*nix)
        if: runner.os != 'Windows'
        run: ./bin/Tests
      - name: cppcheck
        run: sudo apt-get install cppcheck && cppcheck --enable=all --inconclusive --suppress=missingIncludeSystem  --template=gcc  teslyn/ test/
      - name: lcov
        run: git clone https://github.com/linux-test-project/lcov.git && sudo make -C lcov install && sudo cpan JSON PerlIO::gzip && lcov -c -d . -o coverage.info --include "$(pwd)/*"
      - name: coveralls
        uses: coverallsapp/github-action@v1.0.1
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.info

